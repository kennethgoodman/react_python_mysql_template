version: "3.8"

services:
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    entrypoint: ["/usr/src/app/entrypoint.sh"]
    volumes:
      - "./services/api:/usr/src/app"
    ports:
      - 5004:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=src.config.DevelopmentConfig
      - DATABASE_URL=mysql://mysql:mysql@api-db/api_dev
      - DATABASE_TEST_URL=mysql://mysql:mysql@api-db/api_test
    depends_on:
      - api-db

  api-db:
    build:
      context: ./services/db
      dockerfile: Dockerfile
    restart: "always"
    ports:
      - "127.0.0.1:3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: api_dev
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
    expose:
      - 5432

  client:
    stdin_open: true
    build:
      context: ./services/client
      dockerfile: Dockerfile
    volumes:
      - "./services/client:/usr/src/app"
      - "/usr/src/app/node_modules"
    ports:
      - 3007:3000
    environment:
      - NODE_ENV=development
      - REACT_APP_API_SERVICE_URL=http://localhost:5004/api
      - WDS_SOCKET_PORT=0
    depends_on:
      - api

  redis:
    image: redis:latest
    ports:
      - "127.0.0.1:6379:6379"
